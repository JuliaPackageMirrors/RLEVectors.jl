exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
exit()
x = collect(1:10)
x[2:5] = 1:4
x
x[2:4] = [5.0,6.0,7.0]
x = collect(1:10)
x[1:3] = [1.0,2.0,3.0]
x
typeof(1:4) <: Vector
typeof(1:4) <: AbstractVector
exit()
using RLEVectors
Iterable
@doc Iterable
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
methods(zip)
 zip(Bool[true,false,false,true})
 zip(Bool[true,false,false,true])
 !x for x in zip(Bool[true,false,false,true])
[ !x for x in zip(Bool[true,false,false,true])]
exit()
using RLEVectors
UnitRange
}
exit()
using RLEVectors
exit()
using RLEVectors
@doc UnitRange
@doc IntegerRange
@doc OrdinalRange
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
exit()
using RLEVectors
x + x
y = x
runends
            runvals = ($op)(x[ searchsortedfirst( x.runends, runends ) ], y[ searchsortedfirst( y.runends, runends ) ] )
x[runends]
runends
x
x[runends]
x[4]
x[1:3]
x[ [ 1,2,3] ]
typeof([1,2,23])
x[1:3]
exit()
using RLEVectors
x = RLEVector([1,1,2,2,3,3,7,8])
x[ [ 1, 2, 5 ] ]
x
x[ [ 1, 2, 5 ] ]
x[ [ 1, 2, 5 ] ]
x[ [ 1, 2, 5 ] ]
x
collect(x)
collect(x)[ [ 1, 2, 5 ] ]
x.runends
exit()
using RLEVectors
using(RLEVectors)
using "RLEVectors"
using RLEVectors
q()
n
